diff --git a/bta/dm/bta_dm_act.c b/bta/dm/bta_dm_act.c
old mode 100644
new mode 100755
diff --git a/bta/dm/bta_dm_main.c b/bta/dm/bta_dm_main.c
old mode 100644
new mode 100755
diff --git a/btif/include/btif_common.h b/btif/include/btif_common.h
old mode 100644
new mode 100755
index 0145bbf..6c0c301
--- a/btif/include/btif_common.h
+++ b/btif/include/btif_common.h
@@ -24,6 +24,8 @@
 #include "bt_types.h"
 #include "bta_api.h"
 
+#undef TEST_APP_INTERFACE
+
 #ifndef LOG_TAG
 #error "LOG_TAG not defined, please add in .c file prior to including bt_common.h"
 #endif
diff --git a/btif/include/btif_gatt_multi_adv_util.h b/btif/include/btif_gatt_multi_adv_util.h
old mode 100644
new mode 100755
diff --git a/btif/src/bluetooth.c b/btif/src/bluetooth.c
old mode 100644
new mode 100755
index 4895e7d..bd30daf
--- a/btif/src/bluetooth.c
+++ b/btif/src/bluetooth.c
@@ -47,11 +47,14 @@
 #define LOG_TAG "bluedroid"
 
 #include "btif_api.h"
+#include "btm_ble_api.h"
 #include "bd.h"
 #include "bt_utils.h"
 #include "l2cdefs.h"
 #include "l2c_api.h"
 
+#undef TEST_APP_INTERFACE
+
 #if TEST_APP_INTERFACE == TRUE
 #include <bt_testapp.h>
 #endif
diff --git a/btif/src/btif_gatt_qual.c b/btif/src/btif_gatt_qual.c
old mode 100644
new mode 100755
index 557788b..eea8913
--- a/btif/src/btif_gatt_qual.c
+++ b/btif/src/btif_gatt_qual.c
@@ -41,6 +41,7 @@
 #include "bt_utils.h"
 #include "data_types.h"
 #include "gatt_api.h"
+#undef TEST_APP_INTERFACE
 
 #ifdef TEST_APP_INTERFACE
 #include <bt_testapp.h>
diff --git a/btif/src/btif_smp.c b/btif/src/btif_smp.c
old mode 100644
new mode 100755
index 9fd8920..529920b
--- a/btif/src/btif_smp.c
+++ b/btif/src/btif_smp.c
@@ -43,6 +43,8 @@
 #include "data_types.h"
 #include "smp_api.h"
 
+#undef TEST_APP_INTERFACE
+
 #ifdef TEST_APP_INTERFACE
 #include <bt_testapp.h>
 static void SmpInit(void)
diff --git a/hci/src/vendor.c b/hci/src/vendor.c
old mode 100644
new mode 100755
index 912b247..e3c8b2f
--- a/hci/src/vendor.c
+++ b/hci/src/vendor.c
@@ -102,7 +102,7 @@ void vendor_close(void) {
 }
 
 void vendor_ssrcleanup(void) {
-  if (vendor_interface)
+  if (vendor_interface && vendor_interface->ssr_cleanup)
     vendor_interface->ssr_cleanup();
 }
 
diff --git a/include/bt_testapp.h b/include/bt_testapp.h
old mode 100644
new mode 100755
index cfb5989..15d91b6
--- a/include/bt_testapp.h
+++ b/include/bt_testapp.h
@@ -52,6 +52,7 @@
 #include "gap_api.h"
 #include <hardware/hardware.h>
 #include "data_types.h"
+#include "smp_api.h"
 
 __BEGIN_DECLS
 
diff --git a/main/bte_logmsg.c b/main/bte_logmsg.c
old mode 100644
new mode 100755
index 2afd13a..e4dec10
--- a/main/bte_logmsg.c
+++ b/main/bte_logmsg.c
@@ -475,8 +475,9 @@ tBTTRC_FUNC_MAP bttrc_set_level_map[] = {
 #if (DUN_INCLUDED==TRUE)
     {BTTRC_ID_STK_DUN, BTTRC_ID_STK_DUN, DUN_SetTraceLevel, "TRC_DUN", DEFAULT_CONF_TRACE_LEVEL},
 #endif
+#if (HIDH_HOST_INCLUDED==TRUE)
     {BTTRC_ID_STK_HID, BTTRC_ID_STK_HID, HID_HostSetTraceLevel, "TRC_HID_HOST", DEFAULT_CONF_TRACE_LEVEL},
-
+#endif
 #if (GAP_INCLUDED==TRUE)
     {BTTRC_ID_STK_GAP, BTTRC_ID_STK_GAP, GAP_SetTraceLevel, "TRC_GAP", DEFAULT_CONF_TRACE_LEVEL},
 #endif
diff --git a/stack/btm/btm_acl.c b/stack/btm/btm_acl.c
old mode 100644
new mode 100755
index ae89dc0..9b194c5
--- a/stack/btm/btm_acl.c
+++ b/stack/btm/btm_acl.c
@@ -3091,6 +3091,7 @@ static void rssi_monitor_hci_cmd_complete(void *p_data)
             return;
         }
 
+#if BLE_INCLUDED == TRUE
         switch(subcmd)
         {
 
@@ -3142,6 +3143,7 @@ static void rssi_monitor_hci_cmd_complete(void *p_data)
             BTM_TRACE_EVENT("Rssi Monitor invalid command");
             break;
         }
+#endif
     }
     BTM_TRACE_EVENT("%s exit", __FUNCTION__);
 }
@@ -3165,9 +3167,10 @@ static void rssi_monitor_hci_cmd_complete(void *p_data)
 *******************************************************************************/
 tBTM_STATUS BTM_Write_Rssi_Monitor_Threshold(BD_ADDR remote_bda, char min, char max)
 {
+#if BLE_INCLUDED == TRUE
     void      *p_buf = 0;
     tACL_CONN *p_conn = 0;
-    UINT16    op_code = 0x03FF;
+    UINT16    op_code = 0x03FF; 
     UINT8     sub_cmd = WRITE_RSSI_MONITOR_THRESHOLD;
     UINT16    conn_handle = 0x0000;
     UINT8     cmd[5], *p_cursor;
@@ -3198,8 +3201,8 @@ tBTM_STATUS BTM_Write_Rssi_Monitor_Threshold(BD_ADDR remote_bda, char min, char
     *p_cursor++ = max;
 
     btsnd_hcic_vendor_spec_cmd(p_buf, op_code, sizeof(cmd), cmd, (void*)rssi_monitor_hci_cmd_complete);
-
     BTM_TRACE_API("%s exit", __FUNCTION__);
+#endif
     return (BTM_CMD_STARTED);
 }
 
@@ -3216,6 +3219,7 @@ tBTM_STATUS BTM_Write_Rssi_Monitor_Threshold(BD_ADDR remote_bda, char min, char
 *******************************************************************************/
 tBTM_STATUS BTM_Read_Rssi_Monitor_Threshold(BD_ADDR remote_bda)
 {
+#if BLE_INCLUDED == TRUE
     void      *p_buf = 0;
     tACL_CONN *p_conn = 0;
     UINT16    op_code = 0x03FF;
@@ -3250,6 +3254,7 @@ tBTM_STATUS BTM_Read_Rssi_Monitor_Threshold(BD_ADDR remote_bda)
     btsnd_hcic_vendor_spec_cmd(p_buf, op_code, sizeof(cmd), cmd, (void*)rssi_monitor_hci_cmd_complete);
 
     BTM_TRACE_API("%s exit", __FUNCTION__);
+#endif
     return (BTM_CMD_STARTED);
 }
 
@@ -3269,6 +3274,7 @@ tBTM_STATUS BTM_Read_Rssi_Monitor_Threshold(BD_ADDR remote_bda)
 *******************************************************************************/
 tBTM_STATUS BTM_Enable_Rssi_Monitor(BD_ADDR remote_bda, int enable)
 {
+#if BLE_INCLUDED == TRUE
     void      *p_buf = 0;
     tACL_CONN *p_conn = 0;
     UINT16    op_code = 0x03FF;
@@ -3303,6 +3309,7 @@ tBTM_STATUS BTM_Enable_Rssi_Monitor(BD_ADDR remote_bda, int enable)
     btsnd_hcic_vendor_spec_cmd(p_buf, op_code, sizeof(cmd), cmd, (void*)rssi_monitor_hci_cmd_complete);
 
     BTM_TRACE_API("%s exit", __FUNCTION__);
+#endif
     return (BTM_CMD_STARTED);
 }
 #endif
@@ -3322,6 +3329,7 @@ tBTM_STATUS BTM_Enable_Rssi_Monitor(BD_ADDR remote_bda, int enable)
 *******************************************************************************/
 void btm_handle_rssi_monitor_event(UINT8 *p, UINT8 evt_len)
 {
+#if BLE_INCLUDED == TRUE
     BTM_TRACE_EVENT("%s enter", __FUNCTION__);
     if (p)
     {
@@ -3357,6 +3365,7 @@ void btm_handle_rssi_monitor_event(UINT8 *p, UINT8 evt_len)
     }
 
     BTM_TRACE_EVENT("%s exit", __FUNCTION__);
+#endif
 }
 
 /*******************************************************************************
diff --git a/wipowerif/src/wipower.c b/wipowerif/src/wipower.c
old mode 100644
new mode 100755
index aa2ce6f..c623f29
--- a/wipowerif/src/wipower.c
+++ b/wipowerif/src/wipower.c
@@ -64,9 +64,6 @@ unsigned char gStatus;
 wipower_state_t gState;
 unsigned char gCurrentLimit;
 timer_t  wp_data_timer;
-/* adv_inst is captured during MultiAdvertiser and
-** need to track same for wipower instance */
-extern UINT8 wipower_inst_id;
 
 char power_removal_event[] = {0x17, 0x00};
 void dispatch_wp_events (UINT16 len, char* p_param);
@@ -298,6 +295,10 @@ void dispatch_wp_events (UINT16 len, char* p_param) {
                 ALOGE("wipower_hal_cbacks not registered");
             }
 
+            if(alert == 0x01) {
+                /*Disable this event now*/
+                enable_power_apply(0x00, 0x01, 0x00);
+            }
         }
 
     } break;
@@ -449,7 +450,7 @@ int enable_data_notify(bool enable)
 
 int enable_power_apply(bool enable, bool on, bool time_flag)
 {
-    UINT8 en[6];
+    UINT8 en[5];
     if (DBG)
         ALOGI("%s:%d", __func__, enable);
 
@@ -471,8 +472,8 @@ int enable_power_apply(bool enable, bool on, bool time_flag)
         en[3] = WIPOWER_ADV_30MS_LSB;
         en[4] = WIPOWER_ADV_30MS_MSB;
     }
-    en[5] = wipower_inst_id;
-    BTA_DmVendorSpecificCommand(WP_HCI_VS_CMD, 6, en, enable_power_cb);
+
+    BTA_DmVendorSpecificCommand(WP_HCI_VS_CMD, 5, en, enable_power_cb);
     return 0;
 }
 
