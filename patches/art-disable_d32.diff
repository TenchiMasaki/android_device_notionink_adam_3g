diff --cc compiler/optimizing/code_generator_arm.cc
index 3f28e64,e5de2ab..0000000
mode 100644,100644..100755
--- a/compiler/optimizing/code_generator_arm.cc
+++ b/compiler/optimizing/code_generator_arm.cc
@@@ -49,10 -55,18 +49,6 @@@ static constexpr Register kCoreCalleeSa
  static constexpr SRegister kFpuCalleeSaves[] =
      { S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31 };
  
- // D31 cannot be split into two S registers, and the register allocator only works on
- // S registers. Therefore there is no need to block it.
- static constexpr DRegister DTMP = D31;
 -class InvokeRuntimeCallingConvention : public CallingConvention<Register, SRegister> {
 - public:
 -  InvokeRuntimeCallingConvention()
 -      : CallingConvention(kRuntimeParameterCoreRegisters,
 -                          kRuntimeParameterCoreRegistersLength,
 -                          kRuntimeParameterFpuRegisters,
 -                          kRuntimeParameterFpuRegistersLength) {}
 -
 - private:
 -  DISALLOW_COPY_AND_ASSIGN(InvokeRuntimeCallingConvention);
 -};
--
  #define __ reinterpret_cast<ArmAssembler*>(codegen->GetAssembler())->
  #define QUICK_ENTRY_POINT(x) QUICK_ENTRYPOINT_OFFSET(kArmWordSize, x).Int32Value()
  
diff --git a/compiler/utils/arm/constants_arm.h b/compiler/utils/arm/constants_arm.h
old mode 100644
new mode 100755
index 1513296..e6a2bdb
--- a/compiler/utils/arm/constants_arm.h
+++ b/compiler/utils/arm/constants_arm.h
@@ -38,6 +38,14 @@ namespace arm {
 // Constants for specific fields are defined in their respective named enums.
 // General constants are in an anonymous enum in class Instr.
 
+// We support both VFPv3-D16 and VFPv3-D32 profiles, but currently only one at
+// a time, so that compile time optimizations can be applied.
+// Warning: VFPv3-D32 is untested.
+#define VFPv3_D16
+#if defined(VFPv3_D16) == defined(VFPv3_D32)
+#error "Exactly one of VFPv3_D16 or VFPv3_D32 can be defined at a time."
+#endif
+
 // 4 bits option for the dmb instruction.
 // Order and values follows those of the ARM Architecture Reference Manual.
 enum DmbOptions {
@@ -74,6 +82,9 @@ enum DRegister {  // private marker to avoid generate-operator-out.py from proce
   D13 = 13,
   D14 = 14,
   D15 = 15,
+#ifdef VFPv3_D16
+    kNumberOfDRegisters = 16,
+#else
   D16 = 16,
   D17 = 17,
   D18 = 18,
@@ -91,6 +102,7 @@ enum DRegister {  // private marker to avoid generate-operator-out.py from proce
   D30 = 30,
   D31 = 31,
   kNumberOfDRegisters = 32,
+#endif
   kNumberOfOverlappingDRegisters = 16,
   kNoDRegister = -1,
 };
