diff --git a/libc/bionic/libc_init_common.cpp b/libc/bionic/libc_init_common.cpp
index 9094fc5..046d198 100644
--- a/libc/bionic/libc_init_common.cpp
+++ b/libc/bionic/libc_init_common.cpp
@@ -258,6 +258,7 @@ static bool __is_unsafe_environment_variable(const char* name) {
     "LD_ORIGIN_PATH",
     "LD_PRELOAD",
     "LD_PROFILE",
+    "LD_SHIM_LIBS",
     "LD_SHOW_AUXV",
     "LD_USE_LOAD_BIAS",
     "LOCALDOMAIN",
diff --git a/linker/linker.cpp b/linker/linker.cpp
old mode 100644
new mode 100755
index c661624..dc58b8a
--- a/linker/linker.cpp
+++ b/linker/linker.cpp
@@ -3092,13 +3092,8 @@ bool soinfo::prelink_image() {
         break;
 
       case DT_TEXTREL:
-#if defined(__LP64__)
-        DL_ERR("\"%s\" has text relocations", get_realpath());
-        return false;
-#else
         has_text_relocations = true;
         break;
-#endif
 
       case DT_SYMBOLIC:
         has_DT_SYMBOLIC = true;
@@ -3278,11 +3273,6 @@ bool soinfo::link_image(const soinfo_list_t& global_group, const soinfo_list_t&
 
 #if !defined(__LP64__)
   if (has_text_relocations) {
-    // Fail if app is targeting M or above.
-    if (get_application_target_sdk_version() >= __ANDROID_API_M__) {
-      DL_ERR_AND_LOG("\"%s\" has text relocations", get_realpath());
-      return false;
-    }
     // Make segments writable to allow text relocations to work properly. We will later call
     // phdr_table_protect_segments() after all of them are applied.
     DL_WARN("\"%s\" has text relocations. This is wasting memory and prevents "
