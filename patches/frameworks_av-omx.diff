diff --git a/include/media/AudioTrack.h b/include/media/AudioTrack.h
old mode 100644
new mode 100755
index 88c4e61..c9c4b56
--- a/include/media/AudioTrack.h
+++ b/include/media/AudioTrack.h
@@ -269,6 +269,19 @@ public:
                                     bool doNotReconnect = false,
                                     float maxRequiredSpeed = 1.0f);
 
+#ifdef BOARD_OMX_NEEDS_LEGACY_AUDIO
+                        explicit AudioTrack( int streamType,
+                                    uint32_t sampleRate  = 0,
+                                    int format = AUDIO_FORMAT_DEFAULT,
+                                    int channelMask      = 0,
+                                    int frameCount       = 0,
+                                    uint32_t flags       = (uint32_t) AUDIO_OUTPUT_FLAG_NONE,
+                                    callback_t cbf       = 0,
+                                    void* user           = 0,
+                                    int notificationFrames = 0,
+                                    int sessionId        = 0);
+#endif
+
     /* Terminates the AudioTrack and unregisters it from AudioFlinger.
      * Also destroys all resources associated with the AudioTrack.
      */
@@ -712,7 +725,8 @@ public:
      * false for the method to return immediately without waiting to try multiple times to write
      * the full content of the buffer.
      */
-            ssize_t     write(const void* buffer, size_t size, bool blocking = true);
+            ssize_t     write(const void* buffer, size_t size);
+            ssize_t     write(const void* buffer, size_t size, bool blocking);
 
     /*
      * Dumps the state of an audio track.
diff --git a/include/media/stagefright/MediaBufferGroup.h b/include/media/stagefright/MediaBufferGroup.h
old mode 100644
new mode 100755
diff --git a/media/libmedia/Android.mk b/media/libmedia/Android.mk
index 2bdfd43..86d7ccf 100644
--- a/media/libmedia/Android.mk
+++ b/media/libmedia/Android.mk
@@ -75,6 +75,10 @@ LOCAL_SRC_FILES:= \
     StringArray.cpp \
     AudioPolicy.cpp
 
+ifeq ($(BOARD_OMX_NEEDS_LEGACY_AUDIO),true)
+	LOCAL_CFLAGS += -DBOARD_OMX_NEEDS_LEGACY_AUDIO
+endif
+
 LOCAL_SHARED_LIBRARIES := \
 	libui liblog libcutils libutils libbinder libsonivox libicuuc libicui18n libexpat \
         libcamera_client libstagefright_foundation \
diff --git a/media/libmedia/AudioSystem.cpp b/media/libmedia/AudioSystem.cpp
old mode 100644
new mode 100755
index 808b3ab..75ceaf6
--- a/media/libmedia/AudioSystem.cpp
+++ b/media/libmedia/AudioSystem.cpp
@@ -250,6 +250,13 @@ int AudioSystem::logToLinear(float volume)
     return volume ? 100 - int(dBConvertInverse * log(volume) + 0.5) : 0;
 }
 
+#ifdef BOARD_OMX_NEEDS_LEGACY_AUDIO
+extern "C" status_t _ZN7android11AudioSystem21getOutputSamplingRateEPii(uint32_t* samplingRate, audio_stream_type_t streamType)
+{
+    return AudioSystem::getOutputFrameCount(samplingRate, streamType);
+}
+#endif
+
 status_t AudioSystem::getOutputSamplingRate(uint32_t* samplingRate, audio_stream_type_t streamType)
 {
     audio_io_handle_t output;
@@ -287,6 +294,13 @@ status_t AudioSystem::getSamplingRate(audio_io_handle_t ioHandle,
     return NO_ERROR;
 }
 
+#ifdef BOARD_OMX_NEEDS_LEGACY_AUDIO
+extern "C" status_t _ZN7android11AudioSystem19getOutputFrameCountEPii(size_t* frameCount, audio_stream_type_t streamType)
+{
+    return AudioSystem::getOutputFrameCount(frameCount, streamType);
+}
+#endif
+
 status_t AudioSystem::getOutputFrameCount(size_t* frameCount, audio_stream_type_t streamType)
 {
     audio_io_handle_t output;
@@ -775,6 +789,14 @@ audio_policy_forced_cfg_t AudioSystem::getForceUse(audio_policy_force_use_t usag
 }
 
 
+extern "C" audio_io_handle_t _ZN7android11AudioSystem9getOutputE19audio_stream_type_tjjj27audio_policy_output_flags_t(audio_stream_type_t stream,
+                                    uint32_t samplingRate,
+                                    uint32_t format,
+                                    uint32_t channels,
+                                    audio_output_flags_t flags) {
+    return AudioSystem::getOutput(stream,samplingRate,(audio_format_t) format, channels, flags);
+}
+
 audio_io_handle_t AudioSystem::getOutput(audio_stream_type_t stream,
                                     uint32_t samplingRate,
                                     audio_format_t format,
diff --git a/media/libmedia/AudioTrack.cpp b/media/libmedia/AudioTrack.cpp
old mode 100644
new mode 100755
index e8da341..8915626
--- a/media/libmedia/AudioTrack.cpp
+++ b/media/libmedia/AudioTrack.cpp
@@ -113,6 +113,14 @@ static size_t calculateMinFrameCount(
 }
 
 // static
+#ifdef BOARD_OMX_NEEDS_LEGACY_AUDIO
+
+extern "C" int _ZNK7android10AudioTrack12getSessionIdEv();
+extern "C" int _ZN7android10AudioTrack12getSessionIdEv() {
+    return _ZNK7android10AudioTrack12getSessionIdEv();
+}
+#endif
+
 status_t AudioTrack::getMinFrameCount(
         size_t* frameCount,
         audio_stream_type_t streamType,
@@ -169,6 +177,32 @@ status_t AudioTrack::getMinFrameCount(
 }
 
 // ---------------------------------------------------------------------------
+#ifdef BOARD_OMX_NEEDS_LEGACY_AUDIO
+AudioTrack::AudioTrack(
+	int streamType,
+	uint32_t sampleRate,
+	int format,
+	int channelMask,
+	int frameCount,
+	uint32_t flags,
+	callback_t cbf,
+	void* user,
+	int notificationFrames,
+	int sessionId)
+    : mCblk(NULL),
+      mStatus(NO_INIT),
+      mPreviousPriority(ANDROID_PRIORITY_NORMAL), mPreviousSchedulingGroup(SP_DEFAULT)
+#ifdef QCOM_HARDWARE
+      ,mAudioFlinger(NULL),
+      mObserver(NULL)
+#endif
+{
+    mStatus = set((audio_stream_type_t)streamType, sampleRate, (audio_format_t)format,
+            (audio_channel_mask_t) channelMask,
+	    frameCount, (audio_output_flags_t)flags, cbf, user, notificationFrames,
+	    0 /*sharedBuffer*/, false /*threadCanCallJava*/, (audio_session_t)sessionId);
+} 
+#endif
 
 AudioTrack::AudioTrack()
     : mStatus(NO_INIT),
@@ -1713,6 +1747,7 @@ void AudioTrack::restartIfDisabled()
 
 // -------------------------------------------------------------------------
 
+ssize_t AudioTrack::write(const void* buffer, size_t userSize) { return this->write(buffer, userSize, true); }
 ssize_t AudioTrack::write(const void* buffer, size_t userSize, bool blocking)
 {
     if (mTransfer != TRANSFER_SYNC) {
diff --git a/media/libmediaplayerservice/nuplayer/NuPlayerRenderer.h b/media/libmediaplayerservice/nuplayer/NuPlayerRenderer.h
old mode 100644
new mode 100755
index 004e21c..063c07c
--- a/media/libmediaplayerservice/nuplayer/NuPlayerRenderer.h
+++ b/media/libmediaplayerservice/nuplayer/NuPlayerRenderer.h
@@ -212,6 +212,7 @@ private:
     status_t getCurrentPositionFromAnchor(
             int64_t *mediaUs, int64_t nowUs, bool allowPastQueuedVideo = false);
 
+
     size_t fillAudioBuffer(void *buffer, size_t size);
 
     bool onDrainAudioQueue();
diff --git a/media/libstagefright/Android.mk b/media/libstagefright/Android.mk
old mode 100644
new mode 100755
diff --git a/media/libstagefright/AudioPlayer.cpp b/media/libstagefright/AudioPlayer.cpp
old mode 100644
new mode 100755
index b3fb8d4..6354473
--- a/media/libstagefright/AudioPlayer.cpp
+++ b/media/libstagefright/AudioPlayer.cpp
@@ -239,7 +239,7 @@ status_t AudioPlayer::start(bool sourceAlreadyStarted) {
         mAudioTrack = new AudioTrack(
                 AUDIO_STREAM_MUSIC, mSampleRate, AUDIO_FORMAT_PCM_16_BIT, audioMask,
                 0 /*frameCount*/, AUDIO_OUTPUT_FLAG_NONE, &AudioCallback, this,
-                0 /*notificationFrames*/);
+                0 /*notificationFrames*/, AUDIO_SESSION_ALLOCATE, AudioTrack::TRANSFER_DEFAULT, NULL, -1, -1, NULL);
 
         if ((err = mAudioTrack->initCheck()) != OK) {
             mAudioTrack.clear();
diff --git a/media/libstagefright/CameraSource.cpp b/media/libstagefright/CameraSource.cpp
old mode 100644
new mode 100755
diff --git a/media/libstagefright/OMXClient.cpp b/media/libstagefright/OMXClient.cpp
old mode 100644
new mode 100755
diff --git a/media/libstagefright/codecs/amrwbenc/Android.mk b/media/libstagefright/codecs/amrwbenc/Android.mk
old mode 100644
new mode 100755
diff --git a/media/libstagefright/omx/Android.mk b/media/libstagefright/omx/Android.mk
old mode 100644
new mode 100755
index e4fbd81..bab2f2a
--- a/media/libstagefright/omx/Android.mk
+++ b/media/libstagefright/omx/Android.mk
@@ -1,6 +1,11 @@
 LOCAL_PATH:= $(call my-dir)
 include $(CLEAR_VARS)
 
+
+ifeq ($(BOARD_USES_PROPRIETARY_OMX),TF101)
+LOCAL_CFLAGS     += -DTF101_OMX
+endif
+
 LOCAL_SRC_FILES:=                     \
         FrameDropper.cpp              \
         GraphicBufferSource.cpp       \
diff --git a/media/libstagefright/omx/OMXMaster.cpp b/media/libstagefright/omx/OMXMaster.cpp
old mode 100644
new mode 100755
index 6132a2c..1152262
--- a/media/libstagefright/omx/OMXMaster.cpp
+++ b/media/libstagefright/omx/OMXMaster.cpp
@@ -130,13 +130,21 @@ void OMXMaster::clearPlugins() {
 
     mPluginByComponentName.clear();
 
+    int plugin = 1;
     for (List<OMXPluginBase *>::iterator it = mPlugins.begin();
             it != mPlugins.end(); ++it) {
         if (destroyOMXPlugin)
             destroyOMXPlugin(*it);
-        else
-            delete *it;
+        else {
+#ifdef TF101_OMX
+           if( *it != NULL && plugin != 1 && plugin != 2) // 1st plugin is NV, crashes on delete => skip, better than crash for the moment
+#endif
+	      delete *it;
+        }
+
+
         *it = NULL;
+	plugin++;
     }
 
     mPlugins.clear();
diff --git a/media/libstagefright/omx/SoftOMXComponent.cpp b/media/libstagefright/omx/SoftOMXComponent.cpp
old mode 100644
new mode 100755
diff --git a/media/libstagefright/omx/SoftOMXPlugin.cpp b/media/libstagefright/omx/SoftOMXPlugin.cpp
index 0f9c00c..4251cce 100755
--- a/media/libstagefright/omx/SoftOMXPlugin.cpp
+++ b/media/libstagefright/omx/SoftOMXPlugin.cpp
@@ -74,6 +74,7 @@ OMX_ERRORTYPE SoftOMXPlugin::makeComponentInstance(
         OMX_COMPONENTTYPE **component) {
     ALOGV("makeComponentInstance '%s'", name);
 
+    dlerror(); // clear any existing error
     for (size_t i = 0; i < kNumComponents; ++i) {
         if (strcmp(name, kComponents[i].mName)) {
             continue;
diff --git a/media/libstagefright/omx/SoftVideoDecoderOMXComponent.cpp b/media/libstagefright/omx/SoftVideoDecoderOMXComponent.cpp
old mode 100644
new mode 100755
diff --git a/media/libstagefright/omx/SoftVideoEncoderOMXComponent.cpp b/media/libstagefright/omx/SoftVideoEncoderOMXComponent.cpp
old mode 100644
new mode 100755
diff --git a/services/audioflinger/Android.mk b/services/audioflinger/Android.mk
old mode 100644
new mode 100755
index 4f826e5..fa54334
--- a/services/audioflinger/Android.mk
+++ b/services/audioflinger/Android.mk
@@ -79,6 +79,7 @@ LOCAL_SRC_FILES += \
     FastThreadState.cpp
 
 LOCAL_CFLAGS += -DSTATE_QUEUE_INSTANTIATIONS='"StateQueueInstantiations.cpp"'
+LOCAL_CFLAGS += -fno-wrapv
 
 LOCAL_CFLAGS += -fvisibility=hidden
 
