diff --git a/sdcard/sdcard.c b/sdcard/sdcard.c
old mode 100644
new mode 100755
index a79e2dd..184d5d4
--- a/sdcard/sdcard.c
+++ b/sdcard/sdcard.c
@@ -41,6 +41,8 @@
 #include <cutils/hashmap.h>
 #include <cutils/log.h>
 #include <cutils/multiuser.h>
+#include <cutils/properties.h>
+
 
 #include <private/android_filesystem_config.h>
 
@@ -103,6 +105,8 @@
  * or that a reply has already been written. */
 #define NO_STATUS 1
 
+static bool worldWritableExternalStorage = false;
+
 /* Path to system-provided mapping of package name to appIds */
 static const char* const kPackagesListFile = "/data/system/packages.list";
 
@@ -419,7 +423,11 @@ static void attr_from_stat(struct fuse* fuse, struct fuse_attr *attr,
         attr->gid = multiuser_get_uid(node->userid, fuse->gid);
     }
 
+
     int visible_mode = 0775 & ~fuse->mask;
+
+    if (worldWritableExternalStorage) visible_mode = 0777;
+
     if (node->perm == PERM_PRE_ROOT) {
         /* Top of multi-user view should always be visible to ensure
          * secondary users can traverse inside. */
@@ -1887,7 +1895,15 @@ static void run(const char* source_path, const char* label, uid_t uid,
     exit(1);
 }
 
+static void initWorldWritableStorage() {
+    char value[PROPERTY_VALUE_MAX];
+    property_get("persist.external_drive_world_rw", value, "");
+    worldWritableExternalStorage = (value[0] == '1');
+}
+
 int main(int argc, char **argv) {
+    initWorldWritableStorage(); 
+
     const char *source_path = NULL;
     const char *label = NULL;
     uid_t uid = 0;
diff --git a/include/utils/VectorImpl.h b/include/utils/VectorImpl.h
old mode 100644
new mode 100755
index 21ad71c..88c3a05
--- a/include/utils/VectorImpl.h
+++ b/include/utils/VectorImpl.h
@@ -105,7 +105,19 @@ protected:
     virtual void            do_splat(void* dest, const void* item, size_t num) const = 0;
     virtual void            do_move_forward(void* dest, const void* from, size_t num) const = 0;
     virtual void            do_move_backward(void* dest, const void* from, size_t num) const = 0;
-    
+
+#ifdef NEEDS_VECTORIMPL_SYMBOLS
+    // take care of FBC...
+    virtual void            reservedVectorImpl1();
+    virtual void            reservedVectorImpl2();
+    virtual void            reservedVectorImpl3();
+    virtual void            reservedVectorImpl4();
+    virtual void            reservedVectorImpl5();
+    virtual void            reservedVectorImpl6();
+    virtual void            reservedVectorImpl7();
+    virtual void            reservedVectorImpl8();
+#endif
+
 private:
         void* _grow(size_t where, size_t amount);
         void  _shrink(size_t where, size_t amount);
@@ -156,6 +168,18 @@ public:
 protected:
     virtual int             do_compare(const void* lhs, const void* rhs) const = 0;
 
+#ifdef NEEDS_VECTORIMPL_SYMBOLS
+    // take care of FBC...
+    virtual void            reservedSortedVectorImpl1();
+    virtual void            reservedSortedVectorImpl2();
+    virtual void            reservedSortedVectorImpl3();
+    virtual void            reservedSortedVectorImpl4();
+    virtual void            reservedSortedVectorImpl5();
+    virtual void            reservedSortedVectorImpl6();
+    virtual void            reservedSortedVectorImpl7();
+    virtual void            reservedSortedVectorImpl8();
+#endif
+
 private:
             ssize_t         _indexOrderOf(const void* item, size_t* order = 0) const;
 
diff --git a/libutils/String8.cpp b/libutils/String8.cpp
old mode 100644
new mode 100755
index ad65fdb..3d95a87
--- a/libutils/String8.cpp
+++ b/libutils/String8.cpp
@@ -164,7 +164,9 @@ String8::String8(StaticLinkage)
 String8::String8(const String8& o)
     : mString(o.mString)
 {
-    SharedBuffer::bufferFromData(mString)->acquire();
+    if (mString == NULL)
+		mString = getEmptyString();
+	SharedBuffer::bufferFromData(mString)->acquire();
 }
 
 String8::String8(const char* o)
diff --git a/libutils/VectorImpl.cpp b/libutils/VectorImpl.cpp
old mode 100644
new mode 100755
index 30ca663..c4944cf
--- a/libutils/VectorImpl.cpp
+++ b/libutils/VectorImpl.cpp
@@ -516,6 +516,17 @@ void VectorImpl::_do_move_backward(void* dest, const void* from, size_t num) con
     do_move_backward(dest, from, num);
 }
 
+#ifdef NEEDS_VECTORIMPL_SYMBOLS
+void VectorImpl::reservedVectorImpl1() { }
+void VectorImpl::reservedVectorImpl2() { }
+void VectorImpl::reservedVectorImpl3() { }
+void VectorImpl::reservedVectorImpl4() { }
+void VectorImpl::reservedVectorImpl5() { }
+void VectorImpl::reservedVectorImpl6() { }
+void VectorImpl::reservedVectorImpl7() { }
+void VectorImpl::reservedVectorImpl8() { }
+#endif
+
 /*****************************************************************************/
 
 SortedVectorImpl::SortedVectorImpl(size_t itemSize, uint32_t flags)
@@ -631,6 +642,17 @@ ssize_t SortedVectorImpl::remove(const void* item)
     return i;
 }
 
+#ifdef NEEDS_VECTORIMPL_SYMBOLS
+void SortedVectorImpl::reservedSortedVectorImpl1() { };
+void SortedVectorImpl::reservedSortedVectorImpl2() { };
+void SortedVectorImpl::reservedSortedVectorImpl3() { };
+void SortedVectorImpl::reservedSortedVectorImpl4() { };
+void SortedVectorImpl::reservedSortedVectorImpl5() { };
+void SortedVectorImpl::reservedSortedVectorImpl6() { };
+void SortedVectorImpl::reservedSortedVectorImpl7() { };
+void SortedVectorImpl::reservedSortedVectorImpl8() { };
+#endif
+
 /*****************************************************************************/
 
 }; // namespace android
