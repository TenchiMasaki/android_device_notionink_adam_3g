diff --git a/services/core/java/com/android/server/pm/PackageManagerService.java b/services/core/java/com/android/server/pm/PackageManagerService.java
old mode 100644
new mode 100755
index 64a7989..1c6e336
--- a/services/core/java/com/android/server/pm/PackageManagerService.java
+++ b/services/core/java/com/android/server/pm/PackageManagerService.java
@@ -5875,8 +5875,33 @@ public class PackageManagerService extends IPackageManager.Stub {
                     if (isAsec) {
                         copyRet = NativeLibraryHelper.findSupportedAbi(handle, abiList);
                     } else {
-                        copyRet = NativeLibraryHelper.copyNativeBinariesForSupportedAbi(handle,
-                                nativeLibraryRoot, abiList, useIsaSpecificSubdirs);
+                        final int preCopyRet = NativeLibraryHelper.findSupportedAbi(handle, abiList);
+
+                        if (preCopyRet < 0 && preCopyRet != PackageManager.NO_NATIVE_LIBRARIES) {
+                            throw new PackageManagerException(INSTALL_FAILED_INTERNAL_ERROR,
+                                    "Error unpackaging native libs for app, errorCode=" + preCopyRet);
+                        }
+
+                        String primaryCpuAbi;
+                        if (preCopyRet >= 0) {
+                            primaryCpuAbi = abiList[preCopyRet];
+                        } else {
+                            primaryCpuAbi = abiList[0];
+                        }
+
+                        final String instructionSet = VMRuntime.getInstructionSet(primaryCpuAbi);
+                        final String dexCodeInstructionSet = getDexCodeInstructionSet(instructionSet);
+                        final byte dexoptRequired = DexFile.isDexOptNeededInternal(pkg.baseCodePath, pkg.packageName, dexCodeInstructionSet, false);
+                        final boolean isDexOptNeeded =  dexoptRequired != DexFile.UP_TO_DATE;
+
+                        boolean isCopyNativeBinariesNeeded = isDexOptNeeded || isUpdatedSystemApp(pkg);
+                        if (isCopyNativeBinariesNeeded) {
+                            copyRet = NativeLibraryHelper.copyNativeBinariesForSupportedAbi(handle,
+                                    nativeLibraryRoot, abiList, useIsaSpecificSubdirs);
+                        }
+                        else {
+                            copyRet = preCopyRet;
+                        }
                     }
 
                     if (copyRet < 0 && copyRet != PackageManager.NO_NATIVE_LIBRARIES) {
